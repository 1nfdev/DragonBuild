source $DRAGONBUILD/dragoncolors
install=0
build=0
gen=0
clean=0

source DragonMake

usage()
{
    echo "usage: sysinfo_page [[[-f file ] [-i]] | [-h]]"
}
printBan()
{
    cat $DRAGONBUILD/banner.txt                                             
}

mkdir -p .dragon/ninja > /dev/null

# First, get a md5 of the package directory list

while [ "$1" != "" ]; do
    case $1 in
        g | gen | generate)     gen=1
                                ;;
        b | build | make)       build=1
                                ;;
        i | install )           install=1
                                ;;
        c | clean )             clean=1
                                ;;
        h | help | -h)          usage
                                exit
                                ;;
        v | -v )                printBan
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac # who comes up with this syntax lol
    shift
done

if [ $clean == 1 ]; then 
    rm -rf .dragon/build 
    rm -rf .dragon/obj
    rm -rf .dragon/hash
fi

cwd=$(basename $PWD)
hash=$(tar --exclude .dragon -cf - ../$cwd | md5)
lasthash=$(cat .dragon/hash | tr -d '\040\011\012\015')

if [ $gen == 1 ]; then 
    rm -rf .dragon/ninja/build.ninja
    generatedLIBS=$(echo $LIBS | sed '/^$/!s/[^ ]* */-l&/g')
    generatedFRAMEWORKS=$(echo $FRAMEWORKS |  sed 's/\//\\\//g' | sed '/^$/!s/[^ ]* */-framework &/g')
    theosEscaped=$(echo "$THEOS" | sed 's/\//\\\//g')
    filesEscaped=$(echo "$TWEAK_FILES" | sed 's/\//\\\//g')
    if [ -z "$LOGOS_FILE" ]; then
        echo "yeet" > /dev/null
    else
        xmcName=$(echo "${LOGOS_FILE}" | sed 's/.xm/.m/g')
    fi
    sed -e "s/\%%name%%/${TWEAK_NAME}/" -e "s/%%files%%/${filesEscaped}/" -e "s/%%libs%%/${generatedLIBS}/" -e "s/%%frameworks%%/${generatedFRAMEWORKS}/" -e "s/%%theos%%/${theosEscaped}/" -e "s/%%xmcname%%/${xmcName}/" $DRAGONBUILD/${TWEAK_TYPE}Template.ninja > .dragon/ninja/build.ninja
    if [ "$TWEAK_TYPE" == "Prefs" ]; then
        exit 
    fi
fi

if [ $build == 1 ]; then 
    if [ "$hash" == "$lasthash" ]; then
        echo -e "${PrefixColor}[Dragon]${NC} No files changed since last build"
        echo -e "${PrefixColor}[Dragon]${NC} Nothing to be done..."
    else
        echo -e "${PrefixColor}[Dragon]${NC} Processing ${LOGOS_FILE} using Logos"
        if [ -z "$LOGOS_FILE" ]; then
            echo "yeet" > /dev/null
        else
            xmcName=$(echo "${LOGOS_FILE}" | sed 's/.xm/.m/g')
        fi
        $THEOS/bin/logos.pl $LOGOS_FILE > $xmcName
        echo -e "${PrefixColor}[Dragon]${NC} Building with Ninja"
        cp .dragon/ninja/build.ninja $PWD/build.ninja && ninja
        rm build.ninja

        if [ -z "$SUBPROJECTS" ]; then
            echo "yeet" > /dev/null 
        else 
            set -f
            subsb=(${SUBPROJECTS})
            set +f 
            for i in "${subsb[@]}"; do
                bash $DRAGONBUILD/dragonsubprep $i
                cd $i
                cp .dragon/ninja/build.ninja $PWD/build.ninja && ninja
                rm build.ninja
                bash $DRAGONBUILD/dragonsubbuild $i
                cd ..
            done
        fi

        echo -e "${PrefixColor}[Dragon]${NC} Generating Package Structure"
        mkdir -p .dragon/_/DEBIAN 
        cp control .dragon/_/DEBIAN/control 
        cp ${TWEAK_NAME}.plist .dragon/_/Library/MobileSubstrate/DynamicLibraries/${TWEAK_NAME}.plist
        cp -R layout/* .dragon/_/
        mkdir -p .dragon/packages
        echo -e "${PrefixColor}[Dragon]${NC} Building Package"
        dpkg-deb --build -Znone .dragon/_ .dragon/packages/
        GENOUTPUT="$(ls .dragon/packages)"
        cp .dragon/packages/${GENOUTPUT} packages/${GENOUTPUT}
        echo -e "${PrefixColor}[Dragon]${NC} Cleaning Up"
        rm ${TWEAK_NAME}.m
        echo "${GENOUTPUT}" > .dragon/last_package
        tar --exclude .dragon -cf - ../$cwd | md5 > .dragon/hash
    fi
fi



if [ $install == 1 ]; then 
    if [ -z "$DRAGONDEVICEIP" ]; then
        echo -e "${PrefixColor}[Dragon]${NC} The DRAGONDEVICEIP variable is not set!"
        rm -rf .dragon/packages > /dev/null
        exit
    fi
    OUTPUT="$(cat .dragon/last_package | tr -d '\040\011\012\015' )"
    echo -e "${PrefixColor}[Dragon]${NC} Installing..."
    scp packages/${OUTPUT} root@$DRAGONDEVICEIP:/tmp/${OUTPUT}
    ssh root@$DRAGONDEVICEIP "dpkg -i /tmp/${OUTPUT}"
    ssh root@$DRAGONDEVICEIP "rm -rf /tmp/${OUTPUT}"
    echo -e "${PrefixColor}[Dragon]${NC} Reloading Springboard"
    ssh root@$DRAGONDEVICEIP "sbreload"
fi
rm -rf .dragon/packages > /dev/null
